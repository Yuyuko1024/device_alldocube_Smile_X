<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * Copyright (c) 2009, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

     <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
     <integer-array name="config_autoBrightnessLevels">
        <item>16</item>
        <item>32</item>
        <item>50</item>
        <item>100</item>
        <item>140</item>
        <item>180</item>
        <item>240</item>
        <item>300</item>
        <item>600</item>
        <item>800</item>
        <item>1000</item>
        <item>2000</item>
        <item>3000</item>
        <item>4000</item>
        <item>5000</item>
        <item>6000</item>
        <item>8000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.
         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
     <array name="config_autoBrightnessDisplayValuesNits">
        <item>33.07</item>
        <item>49.81</item>
        <item>65.02</item>
        <item>80.2</item>
        <item>96.75</item>
        <item>111.8</item>
        <item>144.3</item>
        <item>144.3</item>
        <item>144.3</item>
        <item>144.3</item>
        <item>144.3</item>
        <item>260.0</item>
        <item>288.5</item>
        <item>302.0</item>
        <item>308.7</item>
        <item>315.4</item>
        <item>330.0</item>
        <item>363.6</item>
        <item>366.6</item>
    </array>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array name="config_defaultPinnerServiceFiles">
        <item>/system/framework/arm64/boot-framework.oat</item>
        <item>/system/framework/boot-framework.vdex</item>
        <item>/system/framework/oat/arm64/services.odex</item>
        <item>/system/framework/oat/arm64/services.vdex</item>
        <item>/system/framework/arm64/boot.oat</item>
        <item>/system/framework/boot.vdex</item>
        <item>/system/framework/arm64/boot-core-libart.oat</item>
        <item>/system/framework/boot-core-libart.vdex</item>
        <item>/system/framework/framework-res.apk</item>
    </string-array>

     <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.
         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>15</item>
        <item>30</item>
        <item>45</item>
        <item>60</item>
        <item>75</item>
        <item>90</item>
        <item>105</item>
        <item>120</item>
        <item>135</item>
        <item>150</item>
        <item>165</item>
        <item>180</item>
        <item>195</item>
        <item>210</item>
        <item>225</item>
        <item>240</item>
        <item>255</item>
    </integer-array>

     <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.
         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>0.0125</item>
        <item>10.39</item>
        <item>33.07</item>
        <item>57.41</item>
        <item>80.02</item>
        <item>104.3</item>
        <item>126.7</item>
        <item>150.3</item>
        <item>172.3</item>
        <item>195.4</item>
        <item>216.9</item>
        <item>239.6</item>
        <item>260.0</item>
        <item>281.9</item>
        <item>302.0</item>
        <item>323.3</item>
        <item>343.1</item>
        <item>363.6</item>
    </array>

     <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array name="config_tether_bluetooth_regexs">
        <item>bt-pan</item>
    </string-array>

     <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array name="config_tether_usb_regexs">
        <item>rndis0</item>
        <item>usb0</item>
    </string-array>

    <!-- If true, the screen can be rotated via the accelerometer in all 4
         rotations as the default behavior. -->
     <bool name="config_allowAllRotations">true</bool>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
     <bool name="config_automatic_brightness_available">true</bool>

    <!-- Boolean indicating if current platform supports HFP inband ringing -->
     <bool name="config_bluetooth_hfp_inband_ringing_support">false</bool>

    <!-- Boolean indicating if current platform supports BLE peripheral mode -->
     <bool name="config_bluetooth_le_peripheral_mode_supported">false</bool>

    <!-- Whether camera shutter sound is forced or not  (country specific). -->
     <bool name="config_camera_sound_forced">false</bool>

    <!-- Flag specifying whether VoLTE should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
     <bool name="config_carrier_volte_available">true</bool>
     <bool name="config_carrier_volte_provisioned">true</bool>
     <bool name="config_carrier_volte_tty_supported">false</bool>
     <bool name="config_carrier_vt_available">true</bool>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
     <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- Flag specifying whether VoLTE is available on device -->
     <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VT is available on device -->
     <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether WFC over IMS is available on device -->
     <bool name="config_device_wfc_ims_available">true</bool>

    <!-- If true, the doze component is not started until after the screen has been turned off
         and the screen off animation has been performed. -->
     <bool name="config_dozePulsePickup">true</bool>

    <!--  Whether Multiuser UI should be shown -->
     <bool name="config_enableMultiUserUI">true</bool>

     <bool name="config_enableAutoPowerModes">true</bool>

     <bool name="config_enableDtmfLocalTone">true</bool>

    <!-- Whether to enable network location overlay which allows network
         location provider to be replaced by an app at run-time. When disabled,
         only the config_networkLocationProviderPackageName package will be
         searched for network location provider, otherwise packages whose
         signature matches the signatures of config_locationProviderPackageNames
         will be searched, and the service with the highest version number will
         be picked. Anyone who wants to disable the overlay mechanism can set it
         to false.
    -->
     <bool name="config_enableNetworkLocationOverlay">true</bool>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
     <bool name="config_enableWifiDisplay">true</bool>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently in hardware. -->
     <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
     <bool name="config_showNavigationBar">true</bool>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
     <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- Whether or not swipe up gesture's opt-in setting is available on this device -->
     <bool name="config_swipe_up_gesture_setting_available">true</bool>

    <!-- Config determines whether to update phone object when voice registration
         state changes. Voice radio tech change will always trigger an update of
         phone object irrespective of this config -->
     <bool name="config_switch_phone_on_voice_reg_state_change">false</bool>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
     <bool name="config_unplugTurnsOnScreen">false</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
     <bool name="config_useDevInputEventForAudioJack">true</bool>

     <bool name="config_wifi_framework_enable_associated_network_selection">false</bool>
     <bool name="config_wifi_wlanPlus_supported">true</bool>

    <!-- Height of the status bar -->
     <dimen name="status_bar_height_portrait">24.0dip</dimen>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
     <fraction name="config_autoBrightnessAdjustmentMaxGamma">300.0%</fraction>

    <!-- User activity timeout: Maximum screen dim duration as a percentage of screen off timeout.
    
         This resource is similar to config_maximumScreenDimDuration but the maximum
         screen dim duration is defined as a ratio of the overall screen off timeout
         instead of as an absolute value in milliseconds.  This is useful for reducing
         the dim duration when the screen off timeout is very short.
    
         When computing the screen dim duration, the power manager uses the lesser
         of the effective durations expressed by config_maximumScreenDimDuration and
         config_maximumScreenDimRatio.
    
         This value must be between 0% and 100%.  If the value is zero, the screen will not
         dim before the device goes to sleep.
    -->
     <fraction name="config_maximumScreenDimRatio">20.000004%</fraction>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
     <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
     <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>

     <integer name="config_bluetooth_max_connected_audio_devices">5</integer>

    <!-- Fast brightness animation ramp rate in brightness units per second-->
     <integer name="config_brightness_ramp_rate_fast">600</integer>

    <!--  Maximum number of supported users -->
     <integer name="config_multiuserMaximumUsers">10</integer>

     <integer name="config_nightDisplayColorTemperatureMax_sprd">1024</integer>

    <!-- Default value for led color when battery is medium charged -->
     <integer name="config_notificationsBatteryMediumARGB">0xFFFFFF00</integer>

    <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
     <integer name="config_num_physical_slots">2</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
     <integer name="config_screenBrightnessSettingMinimum">1</integer>

     <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>
     <string name="config_persistentDataPackageName">com.google.android.gms</string>
     <string name="config_qualified_networks_service_package">com.spreadtrum.ims</string>
     <string name="config_wlan_data_service_package">com.spreadtrum.ims</string>
     <string name="config_wlan_network_service_package">com.spreadtrum.ims</string>

    <!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
         when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
         where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
         and Strength as defined in Authenticators.java -->
    <string-array name="config_biometric_sensors">
        <item>0:2:15</item>
        <item>1:8:4095</item>
    </string-array>

</resources>